Index: git/tests/auto/client/datadevicev1/tst_datadevicev1.cpp
===================================================================
--- git.orig/tests/auto/client/datadevicev1/tst_datadevicev1.cpp
+++ git/tests/auto/client/datadevicev1/tst_datadevicev1.cpp
@@ -3,7 +3,9 @@
 
 #include "mockcompositor.h"
 
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/QClipboard>
 #include <QtGui/QDrag>
Index: git/tests/auto/client/primaryselectionv1/tst_primaryselectionv1.cpp
===================================================================
--- git.orig/tests/auto/client/primaryselectionv1/tst_primaryselectionv1.cpp
+++ git/tests/auto/client/primaryselectionv1/tst_primaryselectionv1.cpp
@@ -5,7 +5,9 @@
 
 #include <qwayland-server-wp-primary-selection-unstable-v1.h>
 
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/QClipboard>
 #include <QtCore/private/qcore_unix_p.h>
Index: git/tests/auto/client/seat/tst_seat.cpp
===================================================================
--- git.orig/tests/auto/client/seat/tst_seat.cpp
+++ git/tests/auto/client/seat/tst_seat.cpp
@@ -2,7 +2,9 @@
 // SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0
 
 #include "mockcompositor.h"
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/QEventPoint>
 
Index: git/tests/auto/client/seatv4/tst_seatv4.cpp
===================================================================
--- git.orig/tests/auto/client/seatv4/tst_seatv4.cpp
+++ git/tests/auto/client/seatv4/tst_seatv4.cpp
@@ -3,7 +3,9 @@
 
 #include "mockcompositor.h"
 
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #if QT_CONFIG(cursor)
 #include <wayland-cursor.h>
Index: git/tests/auto/client/shared/CMakeLists.txt
===================================================================
--- git.orig/tests/auto/client/shared/CMakeLists.txt
+++ git/tests/auto/client/shared/CMakeLists.txt
@@ -44,10 +44,14 @@ qt6_generate_wayland_protocol_server_sou
         ${PROJECT_SOURCE_DIR}/src/3rdparty/protocol/xdg-shell.xml
 )
 
+if(QT_FEATURE_opengl)
+    set(ADDITIONAL_TARGETS Qt::OpenGL)
+endif()
+
 target_link_libraries(SharedClientTest
     PUBLIC
         Qt::Gui
-        Qt::OpenGL
+        ${ADDITIONAL_TARGETS}
         Qt::WaylandClientPrivate
         Wayland::Server
         Threads::Threads # special case
Index: git/tests/auto/client/xdgdecorationv1/tst_xdgdecorationv1.cpp
===================================================================
--- git.orig/tests/auto/client/xdgdecorationv1/tst_xdgdecorationv1.cpp
+++ git/tests/auto/client/xdgdecorationv1/tst_xdgdecorationv1.cpp
@@ -5,7 +5,9 @@
 
 #include <qwayland-server-xdg-decoration-unstable-v1.h>
 
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/QClipboard>
 #include <QtCore/private/qcore_unix_p.h>
Index: git/tests/auto/client/xdgoutput/tst_xdgoutput.cpp
===================================================================
--- git.orig/tests/auto/client/xdgoutput/tst_xdgoutput.cpp
+++ git/tests/auto/client/xdgoutput/tst_xdgoutput.cpp
@@ -4,7 +4,9 @@
 #include "xdgoutputv1.h"
 #include "mockcompositor.h"
 
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/QScreen>
 
Index: git/tests/auto/client/xdgshell/tst_xdgshell.cpp
===================================================================
--- git.orig/tests/auto/client/xdgshell/tst_xdgshell.cpp
+++ git/tests/auto/client/xdgshell/tst_xdgshell.cpp
@@ -2,7 +2,9 @@
 // SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0
 
 #include "mockcompositor.h"
+#if QT_CONFIG(opengl)
 #include <QtOpenGL/QOpenGLWindow>
+#endif
 #include <QtGui/QRasterWindow>
 #include <QtGui/qpa/qplatformnativeinterface.h>
 #include <QtWaylandClient/private/wayland-wayland-client-protocol.h>
